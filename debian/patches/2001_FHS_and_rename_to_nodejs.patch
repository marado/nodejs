Description: FHS paths for nodejs
 Use /usr/lib/nodejs for packaged modules.
 Add /usr/local/lib/nodejs for user-installed modules.
 Use /usr/include/nodejs for headers.
 
Forwarded: not-needed
Author: Jérémy Lal <kapouer@melix.org>
Last-Update: 2012-09-30
--- a/tools/wafadmin/Tools/node_addon.py
+++ b/tools/wafadmin/Tools/node_addon.py
@@ -26,10 +26,10 @@
   conf.env['PREFIX_NODE'] = get_prefix()
   prefix = conf.env['PREFIX_NODE']
   lib = join(prefix, 'lib')
-  nodebin = join(prefix, 'bin', 'node')
+  nodebin = join(prefix, 'bin', 'nodejs')
 
   conf.env['LIBPATH_NODE'] = lib
-  conf.env['CPPPATH_NODE'] = join(prefix, 'include', 'node')
+  conf.env['CPPPATH_NODE'] = join(prefix, 'include', 'nodejs')
 
   conf.env.append_value('CPPFLAGS_NODE', '-D_GNU_SOURCE')
 
@@ -70,7 +70,7 @@
     nodePath = None
     if not os.environ.has_key('NODE_PATH'):
         if not os.environ.has_key('HOME'):
-            nodePath = join(get_prefix(), 'lib', 'node')
+            nodePath = join(get_prefix(), 'lib', 'nodejs')
         else:
             nodePath = join(os.environ['HOME'], '.node_libraries')
     else:
--- a/tools/node-waf
+++ b/tools/node-waf
@@ -3,9 +3,11 @@
 
 
 join = os.path.join
-bindir = os.path.dirname(os.path.realpath(__file__))
-prefix = join(bindir, "..")
-wafdir = join(prefix, "lib", "node")
+if os.environ.has_key('PREFIX_NODE'):
+	prefix = os.environ['PREFIX_NODE']
+else:
+	prefix = "/usr"
+wafdir = join(prefix, "share", "nodejs")
 
 w = join(wafdir, 'wafadmin')
 t = join(w, 'Tools')
--- a/lib/module.js
+++ b/lib/module.js
@@ -493,7 +493,7 @@
 };
 
 Module._initPaths = function() {
-  var paths = [path.resolve(process.execPath, '..', '..', 'lib', 'node')];
+  var paths = ['/usr/lib/nodejs'];
 
   if (process.env['HOME']) {
     paths.unshift(path.resolve(process.env['HOME'], '.node_libraries'));
--- a/doc/node.1
+++ b/doc/node.1
@@ -2,12 +2,12 @@
 
 
 .SH "NAME"
-node \- Server-side JavaScript
+nodejs \- Server-side JavaScript
 
 .SH SYNOPSIS
 
 
-.B node
+.B nodejs
 [
 .B \-v
 ]
