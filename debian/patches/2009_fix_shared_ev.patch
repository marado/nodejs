Description: Use system libev
Author: Jérémy Lal <kapouer@melix.org>
Forwarded: not-needed
Last-Update: 2012-02-17

--- a/wscript
+++ b/wscript
@@ -212,6 +212,26 @@
                 , dest='shared_cares_libpath'
                 )
 
+  opt.add_option('--shared-libev'
+                , action='store_true'
+                , default=False
+                , help='Link to a shared libev DLL instead of static linking'
+                , dest='shared_libev'
+                )
+
+  opt.add_option( '--shared-libev-includes'
+                , action='store'
+                , default=False
+                , help='Directory containing libev header files'
+                , dest='shared_libev_includes'
+                )
+
+  opt.add_option( '--shared-libev-libpath'
+                , action='store'
+                , default=False
+                , help='A directory to search for the shared libev DLL'
+                , dest='shared_libev_libpath'
+                )
 
   opt.add_option( '--with-dtrace'
                 , action='store_true'
@@ -291,6 +311,7 @@
 
   conf.env["USE_SHARED_V8"] = o.shared_v8 or o.shared_v8_includes or o.shared_v8_libpath or o.shared_v8_libname
   conf.env["USE_SHARED_CARES"] = o.shared_cares or o.shared_cares_includes or o.shared_cares_libpath
+  conf.env["USE_SHARED_LIBEV"] = o.shared_libev or o.shared_libev_includes or o.shared_libev_libpath
   conf.env["USE_SHARED_ZLIB"] = o.shared_zlib or o.shared_zlib_includes or o.shared_zlib_libpath
 
   conf.env["USE_GDBJIT"] = o.use_gdbjit
@@ -453,6 +474,20 @@
                           libpath=cares_libpath):
       conf.fatal("Cannot find c-ares")
 
+
+  if conf.env['USE_SHARED_LIBEV']:
+    libev_includes = [];
+    if o.shared_libev_includes: libev_includes.append(o.shared_libev_includes);
+    libev_libpath = [];
+    if o.shared_libev_libpath: libev_libpath.append(o.shared_libev_libpath);
+    if not conf.check_cxx(lib='ev', header_name='ev.h',
+                          uselib_store='EV',
+                          includes=libev_includes,
+                          libpath=libev_libpath):
+      conf.fatal("Cannot find libev")
+  else:
+    conf.sub_config('deps/libev')
+
   conf.define("HAVE_CONFIG_H", 1)
 
   if sys.platform.startswith("sunos"):
@@ -894,7 +929,7 @@
   node = bld.new_task_gen("cxx", product_type)
   node.name         = "node"
   node.target       = "node"
-  node.uselib = 'RT OPENSSL ZLIB CARES EXECINFO DL KVM SOCKET NSL KSTAT UTIL OPROFILE'
+  node.uselib = 'RT OPENSSL ZLIB CARES EV EXECINFO DL KVM SOCKET NSL KSTAT UTIL OPROFILE'
   node.add_objects = 'http_parser'
   if product_type_is_lib:
     node.install_path = '${LIBDIR}'
--- a/src/node_signal_watcher.h
+++ b/src/node_signal_watcher.h
@@ -24,7 +24,7 @@
 
 #include <node.h>
 #include <v8.h>
-#include <uv-private/ev.h>
+#include <ev.h>
 
 namespace node {
 
--- a/src/node_stat_watcher.h
+++ b/src/node_stat_watcher.h
@@ -23,7 +23,7 @@
 #define NODE_STAT_WATCHER_H_
 
 #include <node.h>
-#include <uv-private/ev.h>
+#include <ev.h>
 
 namespace node {
 
--- a/src/node_io_watcher.h
+++ b/src/node_io_watcher.h
@@ -23,7 +23,7 @@
 #define NODE_IO_H_
 
 #include <node_object_wrap.h>
-#include <uv-private/ev.h>
+#include <ev.h>
 
 namespace node {
 
--- a/deps/uv/include/uv-private/uv-unix.h
+++ b/deps/uv/include/uv-private/uv-unix.h
@@ -24,7 +24,7 @@
 
 #include "ngx-queue.h"
 
-#include "ev.h"
+#include <ev.h>
 #include "eio.h"
 
 #include <sys/types.h>
--- a/deps/uv/config-unix.mk
+++ b/deps/uv/config-unix.mk
@@ -19,9 +19,8 @@
 # IN THE SOFTWARE.
 
 E=
-CSTDFLAG=--std=c89 -pedantic -Wall -Wextra -Wno-unused-parameter
+CSTDFLAG=-pedantic -Wall -Wextra -Wno-unused-parameter
 CFLAGS += -g
-CPPFLAGS += -Isrc/unix/ev
 LINKFLAGS=-lm
 
 CPPFLAGS += -D_LARGEFILE_SOURCE
@@ -60,8 +59,7 @@
 EV_CONFIG=config_linux.h
 EIO_CONFIG=config_linux.h
 CSTDFLAG += -D_GNU_SOURCE
-CPPFLAGS += -I/usr/include
-LINKFLAGS+=-lrt -lc-ares
+LINKFLAGS+=-lrt -lc-ares -lev
 OBJS += src/unix/linux.o
 endif
 
@@ -124,8 +122,8 @@
 RUNNER_LIBS=
 RUNNER_SRC=test/runner-unix.c
 
-uv.a: $(OBJS) src/uv-common.o src/unix/ev/ev.o src/unix/uv-eio.o src/unix/eio/eio.o
-	$(AR) rcs uv.a $(OBJS) src/uv-common.o src/unix/uv-eio.o src/unix/ev/ev.o src/unix/eio/eio.o
+uv.a: $(OBJS) src/uv-common.o src/unix/uv-eio.o src/unix/eio/eio.o
+	$(AR) rcs uv.a $(OBJS) src/uv-common.o src/unix/uv-eio.o src/unix/eio/eio.o
 
 src/unix/%.o: src/unix/%.c include/uv.h include/uv-private/uv-unix.h src/unix/internal.h
 	$(CC) $(CSTDFLAG) $(CPPFLAGS) -Isrc  $(CFLAGS) -c $< -o $@
@@ -133,9 +131,6 @@
 src/uv-common.o: src/uv-common.c include/uv.h include/uv-private/uv-unix.h
 	$(CC) $(CSTDFLAG) $(CPPFLAGS) $(CFLAGS) -c src/uv-common.c -o src/uv-common.o
 
-src/unix/ev/ev.o: src/unix/ev/ev.c
-	$(CC) $(CPPFLAGS) $(CFLAGS) -c src/unix/ev/ev.c -o src/unix/ev/ev.o -DEV_CONFIG_H=\"$(EV_CONFIG)\"
-
 
 EIO_CPPFLAGS += $(CPPFLAGS)
 EIO_CPPFLAGS += -DEIO_CONFIG_H=\"$(EIO_CONFIG)\"
--- a/deps/uv/include/uv.h
+++ b/deps/uv/include/uv.h
@@ -208,9 +208,6 @@
 UV_EXTERN uv_loop_t* uv_loop_new(void);
 UV_EXTERN void uv_loop_delete(uv_loop_t*);
 
-/* This is a debugging tool. It's NOT part of the official API. */
-UV_EXTERN int uv_loop_refcount(const uv_loop_t*);
-
 
 /*
  * Returns the default loop.
--- a/deps/uv/src/unix/core.c
+++ b/deps/uv/src/unix/core.c
@@ -179,10 +179,6 @@
 }
 
 
-int uv_loop_refcount(const uv_loop_t* loop) {
-  return ev_loop_refcount(loop->ev);
-}
-
 
 uv_loop_t* uv_default_loop(void) {
   if (!default_loop_ptr) {
